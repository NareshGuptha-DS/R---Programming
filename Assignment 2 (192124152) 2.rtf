{\rtf1\ansi\ansicpg1252\cocoartf2708
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red46\green46\blue46;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c23922\c23922\c23922;\cssrgb\c100000\c100000\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 ITA0448 - R PROGRAMMING\
NARESH GUPTHA\
192124152\
\
1. Will the following code return any error? State the reason behind your answer and\
explain the logic behind the code\
\
val &lt;- numeric()\
result &lt;- vector(&quot;list&quot;, length(val))\
for (index in 1:length(val)) \{\
result[index] &lt;- val[index] ^ 2\
\}\
\
Answer:\
i) there are attempting to reference an object you have not created.\
\
ii) there are running a chunk of code where the object has not been defined in that chunk.
\fs36 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \

\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
2. . What is the value of equation1(3) for the following R code and explain the logic.\
&gt; num &lt;- 4\
&gt; equation1 &lt;- function (val)\
+ \{\
+ num &lt;- 3\
+ num^3 + g (val)\
+ \}\
&gt; equation2 &lt;- function (val)\
+ \{\
+ val*num\
+ \}\
\}\
\
3. Write R function to find nth highest value of a vector in the R program\
\
Answer:\
Input:\
x = c(10, 20, 30, 20, 20, 25, 9, 26)\
print(" Vectors:")\
print(x)\
print("nth highest value in a given vector:")\
print("n = 1")\
n = 1\
print(sort(x, TRUE)[n])\
print("n = 2")\
n = 2\
print(sort(x, TRUE)[n])\
print("n = 3")\
n = 3\
print(sort(x, TRUE)[n])\
print("n = 4")\
n = 4\
print(sort(x, TRUE)[n])\
\
Output:\
[1] " Vectors:"\
[1]10 20 30 20 20 25  9 26\
[1] "nth highest value in a given vector:"\
[1] "n = 1"\
[1] 30\
[1] "n = 2"\
[1] 26\
[1] "n = 3"\
[1] 25\
[1] "n = 4"\
[1] 20\
\
4.
\f1\fs26  Explore the airquality dataset. It contains daily air quality measurements from New York during a period of five months:\
\'95 Ozone: mean ozone concentration (ppb), \'95 Solar.R: solar radiation (Langley),\
\'95 Wind: average wind speed (mph), \'95 Temp: maximum daily temperature in degrees Fahrenheit,\
\'95 Month: numeric month (May=5, June=6, and so on),\'95 Day: numeric day of the month (1 -4).    \
 i. Compute the mean temperature(don\'92t use build in function)\
Program:\
data(airquality)\
mean_temp<-sum(airquality$Temp)/nrow(airquality)\
mean_temp\
Output:\
> mean_temp\
[1] 77.88235\
\
ii.Extract the first five rows from airquality.\
Program:\
data(airquality)\
head(airquality,5)\
Output:\
> head(airquality,5)\
  Ozone Solar.R Wind Temp Month Day\
1    41     190  7.4   67     5   1\
2    36     118  8.0   72     5   2\
3    12     149 12.6   74     5   3\
4    18     313 11.5   62     5   4\
5    NA      NA 14.3   56     5   5\
\
iii.Extract all columns from airquality except Temp and Wind\
Program:\
data(airquality)\
airquality[,c("Ozone", "Solar.R", "Month", "Day")]\
Output:\
> airquality[,c("Ozone", "Solar.R", "Month", "Day")]\
    Ozone Solar.R Month Day\
1      41     190     5   1\
2      36     118     5   2\
3      12     149     5   3\
4      18     313     5   4\
5      NA      NA     5   5\
6      28      NA     5   6\
7      23     299     5   7\
8      19      99     5   8\
9       8      19     5   9\
10     NA     194     5  10\
11      7      NA     5  11\
12     16     256     5  12\
13     11     290     5  13\
14     14     274     5  14\
15     18      65     5  15\
16     14     334     5  16\
17     34     307     5  17\
18      6      78     5  18\
19     30     322     5  19\
20     11      44     5  20\
21      1       8     5  21\
22     11     320     5  22\
23      4      25     5  23\
24     32      92     5  24\
25     NA      66     5  25\
26     NA     266     5  26\
27     NA      NA     5  27\
28     23      13     5  28\
29     45     252     5  29\
30    115     223     5  30\
31     37     279     5  31\
32     NA     286     6   1\
33     NA     287     6   2\
34     NA     242     6   3\
35     NA     186     6   4\
36     NA     220     6   5\
37     NA     264     6   6\
38     29     127     6   7\
39     NA     273     6   8\
40     71     291     6   9\
41     39     323     6  10\
42     NA     259     6  11\
43     NA     250     6  12\
44     23     148     6  13\
45     NA     332     6  14\
46     NA     322     6  15\
47     21     191     6  16\
48     37     284     6  17\
49     20      37     6  18\
50     12     120     6  19\
51     13     137     6  20\
52     NA     150     6  21\
53     NA      59     6  22\
54     NA      91     6  23\
55     NA     250     6  24\
56     NA     135     6  25\
57     NA     127     6  26\
58     NA      47     6  27\
59     NA      98     6  28\
60     NA      31     6  29\
61     NA     138     6  30\
62    135     269     7   1\
63     49     248     7   2\
64     32     236     7   3\
65     NA     101     7   4\
66     64     175     7   5\
67     40     314     7   6\
68     77     276     7   7\
69     97     267     7   8\
70     97     272     7   9\
71     85     175     7  10\
72     NA     139     7  11\
73     10     264     7  12\
74     27     175     7  13\
75     NA     291     7  14\
76      7      48     7  15\
77     48     260     7  16\
78     35     274     7  17\
79     61     285     7  18\
80     79     187     7  19\
81     63     220     7  20\
82     16       7     7  21\
83     NA     258     7  22\
84     NA     295     7  23\
85     80     294     7  24\
86    108     223     7  25\
87     20      81     7  26\
88     52      82     7  27\
89     82     213     7  28\
90     50     275     7  29\
91     64     253     7  30\
92     59     254     7  31\
93     39      83     8   1\
94      9      24     8   2\
95     16      77     8   3\
96     78      NA     8   4\
97     35      NA     8   5\
98     66      NA     8   6\
99    122     255     8   7\
100    89     229     8   8\
101   110     207     8   9\
102    NA     222     8  10\
103    NA     137     8  11\
104    44     192     8  12\
105    28     273     8  13\
106    65     157     8  14\
107    NA      64     8  15\
108    22      71     8  16\
109    59      51     8  17\
110    23     115     8  18\
111    31     244     8  19\
112    44     190     8  20\
113    21     259     8  21\
114     9      36     8  22\
115    NA     255     8  23\
116    45     212     8  24\
117   168     238     8  25\
118    73     215     8  26\
119    NA     153     8  27\
120    76     203     8  28\
121   118     225     8  29\
122    84     237     8  30\
123    85     188     8  31\
124    96     167     9   1\
125    78     197     9   2\
126    73     183     9   3\
127    91     189     9   4\
128    47      95     9   5\
129    32      92     9   6\
130    20     252     9   7\
131    23     220     9   8\
132    21     230     9   9\
133    24     259     9  10\
134    44     236     9  11\
135    21     259     9  12\
136    28     238     9  13\
137     9      24     9  14\
138    13     112     9  15\
139    46     237     9  16\
140    18     224     9  17\
141    13      27     9  18\
142    24     238     9  19\
143    16     201     9  20\
144    13     238     9  21\
145    23      14     9  22\
146    36     139     9  23\
147     7      49     9  24\
148    14      20     9  25\
149    30     193     9  26\
150    NA     145     9  27\
151    14     191     9  28\
152    18     131     9  29\
153    20     223     9  30\
\
iv.Which was the coldest day during the period?\
Program:\
data(airquality)\
coldest_day<-airquality[which.min(airquality$Temp),]\
coldest_day\
Output:\
    NA      NA 14.3   56     5   5\
\
v.How many days was the wind speed greater than 17 mph?\
Program:\
data(airquality)\
sum(airquality$Wind>17)\
Output:\
> sum(airquality$Wind>17)\
[1] 3\
\
5. Write R Program to find maximum and minimum value of a given vector using control\
statement.\
\
Input:\
x = c(10, 20, 30, 25, 9, 26)\
print("Original Vectors:")\
print(x)\
print("Maximum value of the above Vector:")\
print(max(x))\
print("Minimum value of the above Vector:")\
print(min(x))\
\
Output:\
[1] "Original Vectors:"\
[1] 10 20 30 25  9 26\
[1] "Maximum value of the above Vector:"\
[1] 30\
[1] "Minimum value of the above Vector:"\
[1] 9\
\
6)Write a R program to create three vectors a,b,c with 3 integers. Combine the three\
vectors to become a 3\uc0\u9674 3 matrix where each column represents a vector. Print the content of\
the matrix.\
INPUT:\
a<-c(1,2,3)\
b<-c(4,5,6)\
c<-c(7,8,9)\
m<-cbind(a,b,c)\
print("the given 3*3 matrix:")\
print(m)\
OUTPUT:\
[1] "the given 3*3 matrix:"\
     a b c\
[1,] 1 4 7\
[2,] 2 5 8\
[3,] 3 6 9\
}